{"version":3,"sources":["instructions.png","components/Footer.js","components/Result.js","components/Circle.js","components/Cross.js","components/Square.js","components/Tictactoe.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","id","href","target","Result","winner","reset","onClick","Circle","width","height","viewBox","cx","cy","r","Cross","x1","y1","x2","y2","Square","position","value","takeTurn","EMPTY","CIRCLE","CROSS","Tictactoe","React","useState","player","positions","state","setState","p","every","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d707985.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/instructions.dcb84893.png\";","import React from 'react'\nimport instructions from '../instructions.png';\n\nfunction Footer() {\n    return (\n        <div className=\"footer\">\n\n            <div className=\"inst\">\n                {/* <img src={instructions} alt=\"instructions\"/> */}\n                {/* <h3>Instructions</h3> */}\n                <caption>Instructions</caption>\n                <ol>\n                    <li>Click on an empty space <em>onetime</em> to Start.</li>\n                    <li><strong>First player</strong> places 'O's.</li>\n                    <li><strong>Second player</strong> then selects an empty space of their choice.</li>\n                    <li><strong>Second player</strong> places 'X's.</li>\n                    <li>Then the <strong>First player</strong> selects a space of their choice.</li>\n                    <li>and so on and so fourth...</li>\n                    <li><em><strong>TO WIN:</strong> </em> Fill 3 spaces with your symbol('X' or 'O') upwards, downwards or accross</li>\n                </ol>\n                <p>ENJOY</p>\n            </div>\n            <p id=\"smaller\">&#169;2021 All Rights Reserved. Coded in Reactjs by <a href=\"https://www.facebook.com/andrew.bwogi\" target=\"_blank\">(Bwogi)</a></p>\n        </div>\n    )\n}\n\nexport default Footer\n\n","import React from 'react'\n\nfunction Result({ winner, reset }) {\n    return ( <\n        div className = \"result\" > { winner == 'CIRCLE' && 'Circle Wins!.' } { winner == 'CROSS' && 'Cross wins!' } { winner == 'It is a tie' && 'It is a tie!!' } <\n        button onClick = { reset } > New Game < /button>  < /\n        div >\n    );\n}\n\nexport default Result","import React from 'react'\n\nfunction Circle() {\n    return ( \n        // <div > circle </div>\n        <svg width=\"100\" height=\"100\" viewBox=\"-50 -50 100 100\" className=\"circle\">\n            <circle cx=\"0\" cy=\"0\" r=\"40\" />\n        </svg>\n    )\n}\n\nexport default Circle","import React from 'react'\n\nfunction Cross() {\n    return (\n        // <div>cross</div>\n        <svg width=\"100\" height=\"100\" viewBox=\"-50 -50 100 100\" className=\"cross\">\n        <line x1=\"-40\" y1=\"-40\" x2=\"40\" y2=\"40\" />\n        <line x1=\"-40\" y1=\"40\" x2=\"40\" y2=\"-40\" />\n    </svg>\n    )\n}\n\nexport default Cross\n","import React from 'react'\nimport Circle from './Circle';\nimport Cross from './Cross'\n\nfunction Square({ position, value, takeTurn }) {\n    function handleClick(){\n        if(value == 'EMPTY') takeTurn(position)\n    }\n    return ( \n        <div className=\"square\" onClick={handleClick}>\n            {value == 'CIRCLE' && <Circle />}\n            {value == 'CROSS' && <Cross />}\n            </div>\n    );\n}\n\nexport default Square","import React from 'react'\nimport Footer from './Footer';\nimport Result from './Result';\nimport Square from './Square'\n// import Instructions from './instructions'\n\nconst EMPTY = 'EMPTY';\nconst CIRCLE = 'CIRCLE';\nconst CROSS = 'CROSS';\n\nfunction Tictactoe() {\n    const [state, setState] = React.useState({\n        player: CROSS,\n        positions: [ \n            EMPTY,EMPTY,EMPTY,\n            EMPTY,EMPTY,EMPTY,\n            EMPTY,EMPTY,EMPTY\n        ]\n        // winner: EMPTY\n    });\n    \n    function takeTurn(position){\n        const positions = [...state.positions];\n        positions[position] = state.player;\n\n        setState({\n            player: state.player == CIRCLE ? CROSS : CIRCLE,\n            positions\n            // winner: detectWinner(positions)\n        });\n    }\n\n    function reset(){\n        setState({\n            player: CIRCLE,\n            positions: [ \n                EMPTY,EMPTY,EMPTY,\n                EMPTY,EMPTY,EMPTY,\n                EMPTY,EMPTY,EMPTY\n            ]\n        });\n    }\n\n    function detectWinner(p){\n        // circle winning\n        // rows\n        if(p[0] == CIRCLE && p[1] == CIRCLE && p[2] == CIRCLE) return CIRCLE;\n        if(p[3] == CIRCLE && p[4] == CIRCLE && p[5] == CIRCLE) return CIRCLE;\n        if(p[6] == CIRCLE && p[7] == CIRCLE && p[8] == CIRCLE) return CIRCLE;\n        // columns\n        if(p[0] == CIRCLE && p[3] == CIRCLE && p[6] == CIRCLE) return CIRCLE;\n        if(p[1] == CIRCLE && p[4] == CIRCLE && p[7] == CIRCLE) return CIRCLE;\n        if(p[2] == CIRCLE && p[5] == CIRCLE && p[8] == CIRCLE) return CIRCLE\n        // diagonals\n        if(p[0] == CIRCLE && p[4] == CIRCLE && p[8] == CIRCLE) return CIRCLE;\n        if(p[2] == CIRCLE && p[4] == CIRCLE && p[6] == CIRCLE) return CIRCLE;\n        \n        // cross winning\n        if(p[0] == CROSS && p[1] == CROSS && p[2] == CROSS) return CROSS;\n        if(p[3] == CROSS && p[4] == CROSS && p[5] == CROSS) return CROSS;\n        if(p[6] == CROSS && p[7] == CROSS && p[8] == CROSS) return CROSS;\n        // columns\n        if(p[0] == CROSS && p[3] == CROSS && p[6] == CROSS) return CROSS;\n        if(p[1] == CROSS && p[4] == CROSS && p[7] == CROSS) return CROSS;\n        if(p[2] == CROSS && p[5] == CROSS && p[8] == CROSS) return CROSS;\n        // diagonals\n        if(p[0] == CROSS && p[4] == CROSS && p[8] == CROSS) return CROSS;\n        if(p[2] == CROSS && p[4] == CROSS && p[6] == CROSS) return CROSS;\n        \n        // a tie\n        if(p.every(position => position != 'EMPTY')) return \"It is a tie!\";\n    }   \n\n    const winner = detectWinner(state.positions);\n\n    return (\n        <div>\n            <div className=\"grid\">\n                <Square position={0} value={state.positions[0]} takeTurn={takeTurn}/>\n                <Square position={1} value={state.positions[1]} takeTurn={takeTurn} />\n                <Square position={2} value={state.positions[2]} takeTurn={takeTurn} />\n                <Square position={3} value={state.positions[3]} takeTurn={takeTurn} />\n                <Square position={4} value={state.positions[4]} takeTurn={takeTurn} />\n                <Square position={5} value={state.positions[5]} takeTurn={takeTurn} />\n                <Square position={6} value={state.positions[6]} takeTurn={takeTurn} />\n                <Square position={7} value={state.positions[7]} takeTurn={takeTurn} />\n                <Square position={8} value={state.positions[8]} takeTurn={takeTurn} /> \n            </div>\n            {winner && <Result winner={winner} reset={reset} />}\n            <Footer /> \n\n        </div>\n    );\n}\n\nexport default Tictactoe\n","import './App.css';\nimport Tictactoe from './components/Tictactoe';\nimport Square from './components/Square';\nimport Circle from './components/Circle';\nimport Cross from './components/Cross';\nimport Result from './components/Result';\n\n\nfunction App() {\n  return (\n    <div id=\"app\">\n\n        <Tictactoe />\n   \n\n\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}